<%#

In Rails, a template whose name begins with an "_" is considered
a partial.

To create a form for a resource (i.e. a model), use the `form_with`
helper instead of the `form_tag`. It's usual arguments are:

- A named arg. `model` which is assigned an instance of a model
  (e.g. a new question)
- A named arg. `local` which will prevent the form from submitting
  its data using AJAX.
- A block that is passed the `form` object wherein we build
  the HTML inside the form (e.g. labels, inputs, submission buttons, etc)

All dat from the input fields from a form built with this will have its
name-value pairs nested in a hash named after the class of the passed in model.
(e.g. <input name="question[title]"> => { "question: {"title": "what?"} } )

%>

<%#= form_with(model: @question, local: true) do |form| %>
<%= simple_form_for @question do |form| %>

    <%# if @question.errors.present? %>
        <%# 
            <p class="form-errors">
        %>
            <%#= @question.errors.full_messages.join(", ") %>
        <%#
            </p>
        %>
    <%# end %>
    <%# simple form generates div wrapper and label with input by default: 
        - it also knows the type from the DB field type 
        - it also knows whether a field is required or not based on an ActiveRecord validations 
    %>
    <%#= form.input :title, as: :text, label: 'abc', required: false %>
    <%= form.input :title %>
    
    <div>
        <%#= form.label :title %> <%# <br> %>
        <%#= form.text_field :title %>
    </div>

    <%= form.input :body %>
    <div>
        <%#= form.label :body %> <%# <br> %>
        <%#= form.text_area :body, cols: 50, rows: 10 %>
    </div>

    
    <%= form.input :tag_names %>
    <div>
        <%#= form.label :tag_names %>
        <%#= form.text_field :tag_names %>

        <%#= form.collection_check_boxes :tag_ids, Tag.all, :id, :name %>
        <%# 
        The first argument (:tag_ids) is an array of 
        tag_ids that we want to send to the server,
        Tag.all next will display all the Tags, :id is
        what will actually be sent to the server to each
        checked box, and we want to display :name as the 
        label on every checkobox
        %>
    </div>

    <%= form.submit "Submit Question", class: "btn btn-primary bg-light text-primary" %>
<% end %>

<script>
    // Documentation for selectize.js:
    // https://selectize.github.io/selectize.js/

    // For description of options that are usable go to:
    // https://github.com/selectize/selectize.js/blob/master/docs/usage.md

    $("#question_tag_names").selectize({
        delimiter: ',',
        persist: false,
        labelField: "name",
        valueField: "name",
        searchField: "name",
        options: <%= Tag.select(:name).to_json(except: [:id]).html_safe %>,
        create (input) {
            return {
                name: input
            }
        }
    })
</script>
